@using exomine.Data.Models;
@model GameViewModel
@{
    Game game = Model.Game;
}

<div class="container mt-4 d-flex justify-content-center align-items-start gap-4">

    <div id="game-container" style="width: 600px; height: 600px; background-color: #f8f9fa;"></div>

    <div class="d-flex flex-column justify-content-between"
         style="width: 280px; height: 600px; border: 2px solid #444; border-radius: 0.25rem; padding: 20px; background: #fff; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">

        <div>
            <h4 class="mb-4">Game Info</h4>
            <p class="mb-3"><strong>Remaining Bombs:</strong> <span id="rb">@game.Bombs</span></p>
            <p class="mb-3"><strong>Difficulty:</strong> @game.Difficulty</p>
            <p class="mb-3"><strong>Time:</strong> <span id="elapsedTime">0s</span></p>
        </div>

        <div class="mt-4 border-top pt-3" style="font-size: 0.9rem; color: #555;">
            <strong>Instructions:</strong><br />
            Left-click to reveal a cell.<br />
            Right-click to flag a bomb.<br />
            The puzzle is solvable without guessing.
        </div>

    </div>
</div>

<form id="gameResultForm" method="post" action="/Game/Play" style="display:none;">
    <input type="hidden" name="Game.Id" value="@game.Id" />
    <input type="hidden" name="Game.Size" value="@game.Size" />
    <input type="hidden" name="Game.Type" value="@((int)game.Type)" />
    <input type="hidden" name="Game.Difficulty" value="@game.Difficulty" />
    <input type="hidden" name="Game.Bombs" value='@game.Bombs' />
    <input type="hidden" name="Game.Revealed" value='@game.Revealed' />
    <input type="hidden" name="Game.Known" value='@game.Known' />
    <input type="hidden" name="GameId" value='@Model.GameId' />
    <input type="hidden" name="Time" id="Time" />
</form>

@section Scripts {
    <script>
        const data = {
            size: @game.Size,
            type: "@game.Type",
            bombs: "@game.Bombs",
            revealed: "@game.Revealed",
            known: "@game.Known",
        };
        console.log(data);

        let elapsedSeconds = 0;
        const elapsedTimeSpan = document.getElementById('elapsedTime');

        setInterval(() => {
            elapsedSeconds++;
            elapsedTimeSpan.textContent = elapsedSeconds + "s";
            document.getElementById('Time').value = elapsedSeconds;
        }, 1000);
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.min.js"></script>
    <script src="~/js/game.js"></script>
}
